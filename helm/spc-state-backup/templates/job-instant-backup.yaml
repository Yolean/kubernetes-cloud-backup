apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ template "fullname" . }}-{{ randAlpha 6 | lower }}"
  labels:
    app: {{ template "fullname" . }}-run-backup
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  template:
    metadata:
      name: {{ template "fullname" . }}-run-backup
    spec:
      restartPolicy: Never
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 30
      serviceAccountName: {{ template "fullname" . }}
      containers:
      - name: backup
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        env:
        - name: GLOBALRESOURCES
          value: "{{ .Values.kubeState.globalResources }}"
        - name: RESOURCETYPES
          value: "{{ .Values.kubeState.resourceTypes }}"
{{- if .Values.aws.enabled }}
        - name: STORAGE
          value: "aws"
        - name: REGION
          value: "{{ .Values.aws.region }}"
        - name: BUCKET
          value: "{{ .Values.aws.bucket }}"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-aws
              key: accessKeyId
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-aws
              key: secretAccessKey
{{- end }}
{{- if .Values.gcs.enabled }}
        - name: STORAGE
          value: "gcs"
        - name: REGION
          value: "{{ .Values.gcs.region }}"
        - name: BUCKET
          value: "{{ .Values.gcs.bucket }}"
{{- end }}
{{- if .Values.azure.enabled }}
        - name: STORAGE
          value: "azure"
        - name: CONTAINER
          value: "{{ .Values.azure.storageContainer }}"
        - name: AZURE_STORAGE_ACCOUNT
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-azure
              key: storageAccount
        - name: AZURE_STORAGE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-azure
              key: storageAccessKey
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 14 }}
        volumeMounts:
        - name: cache
          mountPath: /tmp/backup
{{- if .Values.gcs.enabled }}
        - name: boto
          mountPath: /backup
{{- end }}
      volumes:
      - name: cache
        emptyDir: {}
{{- if .Values.gcs.enabled }}
      - name: boto
        secret:
          secretName: {{ template "fullname" . }}-gcs
{{- end }}
